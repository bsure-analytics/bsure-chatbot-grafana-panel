name: Build and Release Plugin

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Install Mage
        run: go install github.com/magefile/mage@latest
        
      - name: Install dependencies
        run: npm install
        
      - name: Build plugin
        run: npm run build:all
        
      - name: Create plugin archive
        run: |
          mkdir -p bsure1-chatbot-panel
          cp -r dist/* bsure1-chatbot-panel/
          zip -r bsure1-chatbot-panel.zip bsure1-chatbot-panel
          
      - name: Generate checksums
        run: |
          md5sum bsure1-chatbot-panel.zip > bsure1-chatbot-panel.zip.md5
          sha1sum bsure1-chatbot-panel.zip > bsure1-chatbot-panel.zip.sha1
          
      - name: Sign plugin
        run: |
          if [ "${{ secrets.GRAFANA_API_KEY }}" != "" ]; then
            npx --yes @grafana/sign-plugin@latest --verbose
          else
            echo "GRAFANA_API_KEY not set, skipping plugin signing"
          fi
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
          
      - name: Generate build attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'bsure1-chatbot-panel.zip'
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugin-package
          path: |
            bsure1-chatbot-panel.zip
            bsure1-chatbot-panel.zip.md5
            bsure1-chatbot-panel.zip.sha1
            
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Plugin build for version ${{ github.ref }}
            
            ## Checksums
            - MD5: `$(cat bsure1-chatbot-panel.zip.md5 | cut -d' ' -f1)`
            - SHA1: `$(cat bsure1-chatbot-panel.zip.sha1 | cut -d' ' -f1)`
          draft: false
          prerelease: false